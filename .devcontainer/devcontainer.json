{
	"name": "Flatcase",
	"build": {
		"dockerfile": "Dockerfile",
		"args": {
			"USER": "flatcazer",
			// "stable", "beta", "dev", "master", or check https://github.com/flutter/flutter 
			// for a list of branches and tags.
			// Flutter developers will release the latest features to the master channel first. 
			// As these features stabilize, they will first get promoted to the dev channel, 
			// then toÂ beta, and finally to the stable channel.
			// A very useful link: https://flutter.dev/docs/development/tools/sdk/releases
			"FLUTTER_VERSION": "2.2.3",
		}
	},
	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"dart-code.dart-code",
		"dart-code.flutter"
	],
	"settings": {
		"dart.flutterShowEmulators": "always",
		// If more than one SDK are installed with FVM (https://fvm.app/docs/guides/basic_commands#install), 
		// or rebuild Flatcase with a different "FLUTTER_VERSION"; try to choose the project's Flutter SDK
		// from the status bar where the Flutter version is indicated (this appears when a .dart or the 
		// pubspec.yaml file is open on the active editor tab) or from the command pallet with 
		// [Ctrl+Shift+p] "Flutter: Change SDK".
		// Env variable FVM_HOME is not evaluated by the VSCode, but by the cashed-setup.sh 
		"dart.flutterSdkPaths": [
			"$FVM_HOME/versions"
		],
		"remote.portsAttributes": {
			".+": {
				"onAutoForward": "silent",
			}
		}
	},

	// ***runArgs parameter tweaking.

	// Depending on the target device or connection type you prefer to run or 
	// debug your Flutter project, you may comment out (turn into comments) areas 
	// of runArgs array that are not relevant. Especially in the case of 
	// "Wireless debugging" you may leave uncomment only the first six entries
	// which are the "--name", "--volume" and "--hostname" switches including 
	// their values. 
	// This step is optional and proceed only if you have have security concerns. 
	// Personally, I don't have on my machine.

	// After each modification, apply "Rebuild Container" for the container to 
	// run on the new setup. Also, when running on container, make sure that 
	// VSCode reports your device at the rightmost label of the status bar, or
	// click on it to to see if the intended device is included on the top 
	// popped up list. For more, check on README.md for the chapter "Target Devices".


	"runArgs": [
		"--name",
		"flatcase",
		"--volume",
		"flatcase-cache:/home/flatcazer/.flatcache",
		"--hostname",
		"nomad",
		// ** AVD AREA ** comment out theses, if you don't need emulator
		"--env",
		"DISPLAY",
		"--device",
		"/dev/kvm:/dev/kvm:r",
		"--volume",
		"/tmp/.X11-unix:/tmp/.X11-unix:ro",
		
		// ** USB AREA ** comment out theses, if you don't need USB debugging
		"--privileged",
		"--volume",
		"/dev/bus/usb:/dev/bus/usb:ro",
	],
	"initializeCommand": "getent group kvm | cut -d: -f3 > .devcontainer/kvm_gid",
	"onCreateCommand": ".devcontainer/cashed-setup.sh",
	"remoteUser": "flatcazer"
}